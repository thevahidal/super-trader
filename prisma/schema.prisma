generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  email      String      @unique
  password   String
  firstName  String?
  lastName   String?
  portfolios Portfolio[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Portfolio {
  id      Int     @id @default(autoincrement())
  default Boolean @default(false)
  user    User?   @relation(fields: [userId], references: [id])
  userId  Int?
  assets  Asset[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Share {
  id     Int     @id @default(autoincrement())
  symbol String  @unique
  name   String
  price  Decimal @default(0.0) @db.Decimal(precision: 10, scale: 2)
  assets Asset[]
  active Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Asset {
  id          Int       @id @default(autoincrement())
  share       Share     @relation(fields: [shareId], references: [id])
  shareId     Int
  unit        Decimal   @default(0.0) @db.Decimal(precision: 20, scale: 2)
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id])
  portfolioId Int
  trades      Trade[]
  active      Boolean   @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Trade {
  id         Int     @id @default(autoincrement())
  asset      Asset   @relation(fields: [assetId], references: [id])
  assetId    Int
  sharePrice Decimal @default(0.0) @db.Decimal(precision: 20, scale: 2)
  amount     Decimal @default(0.0) @db.Decimal(precision: 20, scale: 2)
  unit       Decimal @default(0.0) @db.Decimal(precision: 20, scale: 2)
  isBuy      Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
